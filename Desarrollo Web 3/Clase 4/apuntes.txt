Metodos de Arrays

const estudiantes = [
{ id: 1, nombre: 'Juan', edad: 16 },
{ id: 2, nombre: 'María', edad: 17 },
{ id: 3, nombre: 'Carlos', edad: 16 }
];

const estudiantesMayores = estudiantes.filter(estudiante => estudiante.edad > 16);

const estudianteEncontrado = estudiantes.find(estudiante => estudiante.id === 2);

estudiantes.forEach(estudiante => {
if (estudiante.nombre === 'María') {
estudiante.edad = 18;
}
});

const nuevoEstudiante = { id: 4, nombre: 'Laura', edad: 17 };
estudiantes.push(nuevoEstudiante);

const estudiantesFiltrados = estudiantes.filter(estudiante => estudiante.id !== 1);

const estudiantesOrdenados = estudiantes.sort((a, b) => a.edad - b.edad);

-------------------------------------------------------------------------------------------------------------

import React, { useState, useEffect } from 'react';
const App = () => {
const [posts, setPosts] = useState([]);
const [loading, setLoading] = useState(true);
const [error, setError] = useState(null);

useEffect(() => {
// Endpoint para obtener las publicaciones de JSONPlaceholder
const apiUrl = 'https://jsonplaceholder.typicode.com/posts';

// Hacer la solicitud a la API
fetch(apiUrl)
.then(response => response.json())
.then(data => setPosts(data))
.catch(error => setError(error.message))
.finally(() => setLoading(false));
}, []);

return (
<div>
<h1>Posts</h1>
{loading ? (
<p>Loading...</p>
) : (
<ul>
{error ? (
<p>Error: {error}</p>
) : (
posts.map(post => (
<li key={post.id}>
<h3>{post.title}</h3>
<p>{post.body}</p>
</li>
))
)}
</ul>
)}
</div>
);
};